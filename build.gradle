plugins {
	id 'java-library'
	id 'maven-publish'
	id 'signing'
}

group = 'io.github.toggery'
version = '1.0.0'
sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	lombokVersion = '1.18.24'
}

dependencies {
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

java {
	withJavadocJar()
	withSourcesJar()
}

javadoc {
	options.encoding = 'UTF-8'
	options.addStringOption('charset', 'UTF-8')
	if (JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}

publishing {
	publications {
		MyLibrary(MavenPublication) {
			artifactId = 'jt808-messagebody'
			from components.java
			pom {
				name = 'JT/T 808 Message Body'
				description = 'Message body definition for JT/T 808 protocol'
				url = 'https://github.com/toggery/java-jt808-messagebody'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'togger'
						name = 'Togger Jiang'
						email = 'togger@qq.com'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/toggery/java-jt808-messagebody.git'
					developerConnection = 'scm:git:ssh://github.com/toggery/java-jt808-messagebody.git'
					url = 'https://github.com/toggery/java-jt808-messagebody'
				}
			}
		}
	}
	repositories {
		maven {
			if (version.endsWith('SNAPSHOT')) {
				url = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
			} else {
				url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
			}
			credentials {
				username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
				password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
			}
		}
	}
}

signing {
	sign publishing.publications.MyLibrary
}
